From 90503ec74793ae95b14d900b857e3767a04f202e Mon Sep 17 00:00:00 2001
From: nift4 <nift4@protonmail.com>
Date: Fri, 12 May 2023 22:53:14 +0200
Subject: [PATCH 6/7] FMRadio: match playlist by name instead

* Avoids detection failing to find existing playlist and creating new
  one every time you record something, therefore fixes:

java.lang.IllegalStateException: Failed to build unique file: /storage/emulated/0/Music/FM Recordings owner_package_name=com.android.fmradio _display_name=FM Recordings mime_type=audio/mpegurl name=FM Recordings _data=/storage/emulated/0/Music/FM Recordings date_added=1683921081 relative_path=Music/

Change-Id: I92227e154540d072ae26887dc9a137d16009b988
---
 src/com/android/fmradio/FmRecorder.java |  6 ++---
 src/com/android/fmradio/FmUtils.java    | 34 -------------------------
 2 files changed, 2 insertions(+), 38 deletions(-)

diff --git a/src/com/android/fmradio/FmRecorder.java b/src/com/android/fmradio/FmRecorder.java
index 389fbc2..5ca18a6 100644
--- a/src/com/android/fmradio/FmRecorder.java
+++ b/src/com/android/fmradio/FmRecorder.java
@@ -404,10 +404,8 @@ public class FmRecorder implements AudioRecorder.Callback {
                 new String[] {
                     MediaStore.Audio.Playlists._ID
                 },
-                MediaStore.Audio.Playlists.DATA + "=?",
-                new String[] {
-                    FmUtils.getPlaylistPath(context) + RECORDING_FILE_SOURCE
-                },
+                MediaStore.Audio.Playlists.NAME + "=?",
+                new String[] { RECORDING_FILE_SOURCE },
                 null);
         int playlistId = -1;
         if (null != playlistCursor) {
diff --git a/src/com/android/fmradio/FmUtils.java b/src/com/android/fmradio/FmUtils.java
index 96fcfdb..a24f9f8 100644
--- a/src/com/android/fmradio/FmUtils.java
+++ b/src/com/android/fmradio/FmUtils.java
@@ -23,7 +23,6 @@ import android.graphics.Bitmap;
 import android.os.Environment;
 import android.os.StatFs;
 import android.os.SystemProperties;
-import android.os.storage.StorageManager;
 import android.preference.PreferenceManager;
 import android.util.Log;
 import android.view.View.MeasureSpec;
@@ -64,8 +63,6 @@ public class FmUtils {
     private static final String FM_IS_FIRST_TIME_PLAY = "fm_is_first_time_play";
     private static final String FM_IS_SPEAKER_MODE = "fm_is_speaker_mode";
     private static final String FM_IS_FIRST_ENTER_STATION_LIST = "fm_is_first_enter_station_list";
-    // StorageManager For FM record
-    private static StorageManager sStorageManager = null;
 
     /**
      * Whether the frequency is valid.
@@ -154,37 +151,6 @@ public class FmUtils {
         return Environment.getExternalStorageDirectory().getPath();
     }
 
-    /**
-     * Get the default storage state
-     *
-     * @return The default storage state
-     */
-    public static String getDefaultStorageState(Context context) {
-        ensureStorageManager(context);
-        String state = sStorageManager.getVolumeState(getDefaultStoragePath());
-        return state;
-    }
-
-    private static void ensureStorageManager(Context context) {
-        if (sStorageManager == null) {
-            sStorageManager = (StorageManager) context.getSystemService(Context.STORAGE_SERVICE);
-        }
-    }
-
-    /**
-     * Get the FM play list path
-     *
-     * @param context The context
-     *
-     * @return The FM play list path
-     */
-    public static String getPlaylistPath(Context context) {
-        ensureStorageManager(context);
-        String[] externalStoragePaths = sStorageManager.getVolumePaths();
-        String path = externalStoragePaths[0] + "/Playlists/";
-        return path;
-    }
-
     /**
      * Check if has enough space for record
      *
-- 
2.40.1

